<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.screenname.dao.sql.AccountDAO">
    <insert id="insert" parameterType="CreateAccountDTO" >
        INSERT INTO Account (email, password, fullname, role, status, createdDate) VALUES (#{email}, #{password}, #{fullname}, #{role}, #{status}, #{createdDate});
    </insert>

<!--    <update id="update" parameterType="Student">-->
<!--        UPDATE STUDENT SET EMAIL = #{email}, NAME = #{name}, BRANCH = #{branch}, PERCENTAGE = #{percentage}, PHONE = #{phone} WHERE ID = #{id};-->
<!--    </update>-->

<!--    <delete id="deleteByEmail" parameterType="String">-->
<!--        DELETE from CreateAccountDTO WHERE email = ${value};-->
<!--    </delete>-->

    <select id="getAccount" resultMap="getAccount">
        SELECT A1.email AS email,
               A1.fullname AS fullname,
               A1.role AS role,
               A1.status AS status,
               A1.createdDate AS createdDate,
               A2.totalOfRecord AS totalOfRecord
        FROM Account A1, (SELECT COUNT(email) AS totalOfRecord FROM Account) A2
        <if test="searchValue != null">
            <where>
                <choose>
                    <when test="searchField == 'fullname'">
                        fullname like '%' + #{searchValue} +'%'
                    </when>
                    <when test="searchField == 'email'">
                        email like '%' #{searchValue} '%'
                    </when>
                </choose>
            </where>
        </if>
        ORDER BY
        <choose>
            <when test="sortField == 'email'">
                email
            </when>
            <when test="sortField == 'fullname'">
                fullname
            </when>
            <otherwise>
                createdDate
            </otherwise>
        </choose>
        <if test="isAsc == true">
            ASC
        </if>
        <if test="isAsc == false">
            DESC
        </if>
        LIMIT
            #{offSet},
            #{fetchNext}
    </select>

<!--    <select id="getAccountByEmail" resultMap="result">-->
<!--        SELECT email AS email,-->
<!--               fullname AS fullname,-->
<!--               role AS role,-->
<!--               status AS status,-->
<!--               createdDate AS createdDate-->
<!--        FROM Account-->
<!--        WHERE email= #{email};-->
<!--    </select>-->

<!--    <select id="selectByEmail" parameterType="String" resultType="CreateAccountDTO">-->
<!--        SELECT * FROM CreateAccountDTO WHERE ID = ${value};-->
<!--    </select>-->

    <resultMap id = "result" type = "CreateAccountDTO">
        <result property = "email" column = "email"/>
        <result property = "password" column = "password"/>
        <result property = "fullname" column = "fullname"/>
        <result property = "role" column = "role"/>
        <result property = "status" column = "status"/>
        <result property="createdDate" column="createdDate"/>
    </resultMap>
    <resultMap id="getAccount" type="ResponseGetAccountForm">
        <result property="totalOfRecord" column="totalOfRecord"/>
        <collection property="accountLst" ofType="CreateAccountDTO">
            <id property="email" column="email"/>
            <result property="fullname" column="fullname"/>
            <result property="role" column="role"/>
            <result property="status" column="status"/>
            <result property="createdDate" column="createdDate"/>
        </collection>
    </resultMap>
</mapper>